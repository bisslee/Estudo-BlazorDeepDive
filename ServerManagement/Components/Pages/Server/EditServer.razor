@page "/servers/{id:int}"

@inject NavigationManager NavigationManager

<h3>EditServer</h3>

<br />
<br />

@if (server != null)
{
    <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>

        <InputNumber @bind-Value="server.Id" hidden />

        <FieldComponent Label="Name">
            <Control>
                <InputText @bind-Value="server.Name" class="form-control" />
            </Control>
            <ValidationControl>
                <ValidationMessage For="()=> server.Name" />
            </ValidationControl>
        </FieldComponent>

        <FieldComponent Label="City">
            <Control>
                <InputText @bind-Value="server.City" class="form-control" />
            </Control>
            <ValidationControl>
                <ValidationMessage For="()=> server.City" />
            </ValidationControl>
        </FieldComponent>

        <FieldComponent Label="Online?">
            <Control>
                <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input" />
            </Control>
        </FieldComponent>

        <ValidationSummary />

        <button type="submit" class="btn btn-primary">Save</button>
        &nbsp;
        <a href="/servers" class="btn btn-primary">Back</a>
    </EditForm>
}


@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    private Server? server { get; set; }

    protected override void OnParametersSet()
    {
        server ??= ServersRepository.GetServerById(this.Id);
    }

    private void Submit()
    {
        if (server != null)
        {
            ServersRepository.UpdateServer(server.Id, server);
        }
        try
        {
            NavigationManager.NavigateTo("/servers", true);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
