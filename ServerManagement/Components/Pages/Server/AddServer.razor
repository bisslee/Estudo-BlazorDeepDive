@page "/servers/add" 
@inject NavigationManager NavigationManager
<h3>Add Server</h3>

<br />
<br />

<EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="row mb-3">
        <div class="col-2">
            <label class="form-label">Name</label>
        </div>
        <div class="col-6">
            <InputText @bind-Value="server.Name" class="form-control" />
        </div>
        <div class="col">
            <ValidationMessage For="()=> server.Name" />
        </div>

    </div>
    <div class="row mb-3">
        <div class="col-2">
            <label class="form-label">City</label>
        </div>
        <div class="col-6">
            <InputSelect @bind-Value="server.City" class="form-control">
                <option value="">Selecione</option>
                @foreach (var city in cities)
                {
                    <option value="@city">@city</option>
                }
            </InputSelect>
        </div>
        <div class="col">
            <ValidationMessage For="()=> server.City" />
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2">
            <label class="form-label">Online?</label>
        </div>
        <div class="col-6">
            <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input" />
        </div>

    </div>

    <ValidationSummary />

    <button type="submit" class="btn btn-primary">Save</button>
    &nbsp;
    <a href="/servers" class="btn btn-primary">Back</a>
</EditForm>
<br />
<br />
@code {
    [SupplyParameterFromForm]
    private Server server { get; set; } = new Server() {IsOnline=false };

    private List<string> cities;

    protected override void OnInitialized()
    {
        // Carregar as cidades no método OnInitialized ou OnInitializedAsync
        cities = CitiesRepository.GetCities();
    }

    private void Submit()
    {
        if(server != null)
        {
            ServersRepository.AddServer(server);
        }
        NavigationManager.NavigateTo("/servers");
    }
}
