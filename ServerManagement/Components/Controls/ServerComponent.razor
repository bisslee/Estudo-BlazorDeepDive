@inject NavigationManager NavigationManager

@if (Server != null)
{
    <li @key="Server.Id">
        @Server.Name in @Server.City is
        <span style="color:@(@Server.IsOnline ? "green" : "red")">
            <strong>@(@Server.IsOnline ? "Up" : "Down")</strong>
        </span>
       &nbsp; 
        <a href="servers/@Server.Id" class="btn btn-link">Edit</a>
        @* <button 
            type="button"
            @onclick="(() => { DeleteServer(Server.Id); })"
            class="btn btn-link">Edit</button> *@
         &nbsp; 
        <EditForm Model="Server"
                  FormName="@($"form-server-{Server.Id}")"
                  OnValidSubmit="@(() => {DeleteServer(Server.Id);} )">
            <button type="submit" class="btn btn-link">Delete</button>
        </EditForm>
    </li>

    @*   @if(editing)
        {
            <ServerManagement.Components.Pages.Server.EditServer Id="Server.Id" />
        } *@
}

@code {

    [Parameter]
    public Server? Server { get; set; }


    private void DeleteServer(int id)
    {
        if (id > 0)
        {
            ServersRepository.DeleteServer(id);
            NavigationManager.NavigateTo("/servers", true);
            
        }
    }
}
