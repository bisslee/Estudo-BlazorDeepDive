@typeparam TItem

@Loading

@Header

@if(Items != null && Items.Count>0 && Row !=null)
{
    <Virtualize Items="this.Items" Context="item">
        @Row(item)
    </Virtualize>
}
else
{
    @Empty
}
@Footer


@code {


    [Parameter]
    public List<TItem>? Items { get; set; }

    [Parameter]
    public RenderFragment<TItem>? Row { get; set; }

    [Parameter]
    public RenderFragment? Empty { get; set; }

    [Parameter]
    public RenderFragment? Loading { get; set; }

    [Parameter]
    public RenderFragment? Header { get; set; }

    [Parameter]
    public RenderFragment? Footer { get; set; }





    [Parameter]
    public EventCallback<TItem> OnItemSelected { get; set; }

    private TItem? selectedItem;

    private void HandleItemSelected(TItem item)
    {
        selectedItem = item;
        OnItemSelected.InvokeAsync(item);
    }
}
